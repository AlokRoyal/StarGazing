# -*- coding: utf-8 -*-
"""Copy of 2023-02-05_Alok_Lesson16

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XykvI4noCpqzOp6J2s6HYuVs4T1uPm-h

# Lesson 16: Hunting Exoplanets In Space - Deploying A Prediction Model

#### Loading The Datasets

Create a Pandas DataFrame every time you start a Jupyter notebook.

Dataset links (Don't click on them):

1. Train dataset

   https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/kepler-exoplanets-dataset/exoTrain.csv

2. Test dataset
   
   https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/kepler-exoplanets-dataset/exoTest.csv
"""

# Loading both the training and test datasets.
import pandas as pd

exo_train_df = pd.read_csv('https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/kepler-exoplanets-dataset/exoTrain.csv')
exo_test_df = pd.read_csv('https://s3-student-datasets-bucket.whjr.online/whitehat-ds-datasets/kepler-exoplanets-dataset/exoTest.csv')

# Number of rows and columns in the DataFrames.
print(exo_train_df.shape)
exo_test_df.shape

# Student Action: Count the number of times a value occurs in a Pandas series.
exo_test_df['LABEL'].value_counts()


# Teacher Action: Import the required modules from the 'sklearn' library.
# Import the 'RandomForestClassifier' module from the 'sklearn.ensemble' library.
from sklearn.ensemble import RandomForestClassifier

# Student Action: Extract the feature variables from the training dataset using the 'iloc[]' function.
x_train = exo_train_df.iloc[:,1:]
x_train.head()

# Student Action: Using the 'iloc[]' function, retrieve only the first column, i.e., the 'LABEL' column from the training dataset.
y_train = exo_train_df.iloc[:,0]
y_train.head()


# 1. First, call the 'RandomForestClassifier' module with inputs as 'n_jobs = - 1' & 'n_estimators=50'. Store it in a variable with the name 'rf_clf'.
# For the time being, ignore the reason behind providing the 'n_jobs=-1' parameter as an input.
rf_clf = RandomForestClassifier(n_jobs=-1, n_estimators=50)
# 2. Call the 'fit()' function with 'x_train' and 'y_train' as inputs.
rf_clf.fit(x_train, y_train)
# 3. Call the 'score()' function with 'x_train' and 'y_train' as inputs to check the accuracy score of the model.
rf_clf.score(x_train, y_train)

# Student Action: Using the 'iloc[]' function, extract the feature variables from the test dataset.
x_test = exo_test_df.iloc[:,1:]
x_test.head()

# Student Action: Using the 'iloc[]' function, extract the target variable from the test dataset.
y_test = exo_test_df.iloc[:,0]

# Student Action: Make predictions on the test dataset by using the 'predict()' function.
y_predict = rf_clf.predict(x_test)

# Student Action: Using the 'type()' function, verify that the predicted values are obtained in the form of a NumPy array.
type(y_predict)

# Student Action: Convert the NumPy array of predicted values into a Pandas series.
y_predict = pd.Series(y_predict)

# Student Action: Using the 'value_counts()' function, count the number of times 1 and 2 occur in the predicted values.
y_predict.value_counts()